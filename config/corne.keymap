// vim: ft=c
/*
 *
 * Inspired by:
 *  - https://github.com/urob/zmk-config
 *  - https://github.com/manna-harbour/miryoku
 *  - https://github.com/Vermoot/qmk_keymaps/tree/master/kyria/keymaps/Vermoot
 *  - https://github.com/minusfive/zmk-config
 *
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// define layer names
#define L_BASE 0
#define L_GAMING 1
#define L_NAV 2
#define L_FN 3
#define L_MED 4
#define L_NUM 5
#define L_SYM 6

// global settings
#define TAPPING_TERM_MS 280
#define QUICK_TAP_MS 125
#define COMBO_TERM_DEFAULT 30
#define COMBO_QUICK_TAP_MS 100

// key aliases
#define ___ &trans            // transparent, inherit key from lower layer
#define MEH LA(LS(LCTRL))     // meh modifier combo: ctrl+alt+shift
#define HYP LA(LS(LG(LCTRL))) // hyper modifier combo: ctrl+alt+command+shift

// mod-tap: long-tap action on hold, short-tap action on all interrupts
&mt {
  flavor = "tap-preferred";
  tapping-term-ms = <TAPPING_TERM_MS>;
  quick-tap-ms = <QUICK_TAP_MS>;
  hold-trigger-key-positions = <0>;
};

// sticky-key: leave a key pressed until another key is pressed
&sk {
  quick-release; // deactivate sticky key on next key press, not next key release, to prevent issues when typing quickly
};

// nav layer shortcuts
#define NAV_LEFT  &mt HOME     LEFT  // tap: left  | long-tap: beginning of line
#define NAV_RIGHT &mt END      RIGHT // tap: right | long-tap: end of line
#define NAV_UP    &mt LG(HOME) UP    // tap: up    | long-tap: beginning of document
#define NAV_DOWN  &mt LG(END)  DOWN  // tap: down  | long-tap: end of document
#define NAV_BSPC  &mt LG(BSPC) BSPC  // tap: bspc  | long-tap: delete word backwards
#define NAV_DEL   &mt LG(DEL)  DEL   // tap: del   | long-tap: delete word forwards

// fn layer shortcuts
#define FN_RGB_TOG &rgb_ug RGB_TOG
#define FN_RGB_HUI &rgb_ug RGB_HUI
#define FN_RGB_SAI &rgb_ug RGB_SAI
#define FN_RGB_BRI &rgb_ug RGB_BRI
#define FN_RGB_EFF &rgb_ug RGB_EFF

// num layer shortcuts
#define NUM_DESK_SM &kp LG(LALT)  // modifier for selecting specific desktop with number key
#define NUM_DESK_MM &kp LG(LSHFT) // modifier for moving window to specific desktop with number key
#define NUM_MON_SM  &kp LC(LALT)  // modifier for selecting specific monitor with number key
#define NUM_MON_MM  &kp LC(LCTRL) // modifier for moving window to specific monitor with number key

/*                                      42 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
              ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */

// define home row keys
#define HOMEROW_KEYS_L 5  4  3  2  1 17 16 15 14 13 29 28 27 26 25 // left hand
#define HOMEROW_KEYS_R 6  7  8  9 10 18 19 20 21 22 30 31 32 33 34 // right hand
#define THUMB_KEYS     36 37 38 39 40 41

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TERM, QUICKTAP) \
  combo_##NAME { \
    timeout-ms = <TERM>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
  };

/ {
  combos {
    compatible = "zmk,combos";

    // symbol combos, left split
    COMBO(excl, &kp EXCL, 1 13, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(at, &kp AT, 2 14, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(hash, &kp HASH, 3 15, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(dollar, &kp DOLLAR, 4 16, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(percent, &kp PRCNT, 5 17, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(caret, &kp CARET, 13 25, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(ampersand, &kp AMPS, 14 26, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(star, &kp STAR, 15 27, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(lpar, &kp LPAR, 16 28, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(rpar, &kp RPAR, 17 29, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)

    // symbol combos, right split
    COMBO(minus, &kp MINUS, 7 19, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(equal, &kp EQUAL, 8 20, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(semicolon, &kp SEMI, 9 21, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(lbkt, &kp LBKT, 19 31, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(rbkt, &kp RBKT, 20 32, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
    COMBO(backslash, &kp BSLH, 21 33, L_BASE, COMBO_TERM_DEFAULT, COMBO_QUICK_TAP_MS)
  };

  behaviors {
    hml: homerow_left_hold_tap {
    compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_LEFT_HOLD_TAP";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      quick-tap-ms = <QUICK_TAP_MS>;
      global-quick-tap;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <HOMEROW_KEYS_R THUMB_KEYS>;
    };

    hmr: homerow_right_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_RIGHT_HOLD_TAP";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      quick-tap-ms = <QUICK_TAP_MS>;
      global-quick-tap;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <HOMEROW_KEYS_L THUMB_KEYS>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base_layer {
      label = "Base";
      bindings = <
        //╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
            &mt MEH TAB     &kp Q           &kp W           &kp F           &kp P           &kp B                 &kp J           &kp L           &kp U           &kp Y           &kp SQT         &none
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            &mt HYP ESC     &hml LSHFT A    &hml LGUI R     &hml LALT S     &hml LCTRL T    &kp G                 &kp M           &hmr RCTRL N    &hmr RALT E     &hmr RGUI I     &hmr RSHFT O    &kp RET
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            &none           &kp Z           &kp X           &kp C           &kp D           &kp V                 &kp K           &kp H           &kp COMMA       &kp DOT         &kp FSLH       &none
        //╰───────────────┼───────────────┴───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                            &lt L_MED TAB   &lt L_NAV ESC   &lt L_FN SPACE        &lt L_SYM RET   &lt L_NUM BSPC  &key_repeat
        //                                                ╰───────────────┴───────────────┴───────────────╯     ╰───────────────┴───────────────┴───────────────╯
      >;
    };

    gaming_layer {
      label = "Gaming";
      bindings = <
        //╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
            ___             &kp Q           &kp W           &kp E           &kp R           &kp T                 &kp Y           &kp U           &kp I           &kp O           &kp P           ___
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             &kp A           &kp S           &kp D           &kp F           &kp G                 &kp H           &kp J           &kp K           &kp L           &kp SEMI        &kp SQT
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             &kp Z           &kp X           &kp C           &kp V           &kp B                 &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH       ___
        //╰───────────────┼───────────────┴───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                            ___             ___             ___                   ___             ___             ___
        //                                                ╰───────────────┴───────────────┴───────────────╯     ╰───────────────┴───────────────┴───────────────╯
      >;
    };

    nav_layer {
      label = "Nav";
      bindings = <
        //╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
            ___             ___             ___             ___             ___             ___                   ___             ___             ___             ___             ___             ___
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             &sk LSHFT       &sk LGUI        &sk LALT        &sk LCTRL       ___                   NAV_LEFT        NAV_DOWN        NAV_UP          NAV_RIGHT       ___             ___
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             ___             ___             ___             ___             ___                   NAV_BSPC        &kp PG_DN       &kp PG_UP       NAV_DEL         ___             ___
        //╰───────────────┼───────────────┴───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                            ___             ___             ___                   ___             ___             ___
        //                                                ╰───────────────┴───────────────┴───────────────╯     ╰───────────────┴───────────────┴───────────────╯
      >;
    };

    fn_layer {
      label = "Fn";
      bindings = <
        //╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
            ___             &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_CLR      &tog L_GAMING
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             &hml LGUI F6    &hml LALT F7    &hml LCTRL F8   &hml LSHFT F9   &kp F10               FN_RGB_TOG      FN_RGB_HUI      FN_RGB_SAI      FN_RGB_BRI      FN_RGB_EFF      ___
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            &sys_reset      &kp F11         &kp F12         ___             ___             ___                   ___             &kp C_BRI_DN    &kp C_BRI_UP    ___             ___             ___
        //╰───────────────┼───────────────┴───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                            ___             ___             ___                   ___             ___             ___
        //                                                ╰───────────────┴───────────────┴───────────────╯     ╰───────────────┴───────────────┴───────────────╯
      >;
    };

    media_layer {
      label = "Media";
      bindings = <
        //╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
            ___             ___             ___             ___             ___             ___                   ___             ___             ___             ___             ___             ___
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             &sk LSHFT       &sk LGUI        &sk LALT        &sk LCTRL       ___                   &kp C_PREV      &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT      ___             ___
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             ___             ___             ___             ___             ___                   ___             &kp C_PP        &kp C_MUTE      ___             ___             ___
        //╰───────────────┼───────────────┴───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                            ___             ___             ___                   ___             ___             ___
        //                                                ╰───────────────┴───────────────┴───────────────╯     ╰───────────────┴───────────────┴───────────────╯
      >;
    };

    num_layer {
      label = "Num";
      bindings = <
        //╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
            ___             &kp N1          &kp N2          &kp N3          &kp N4          &kp N5                ___             ___             ___             ___             ___             ___
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             &hml LGUI N6    &hml LALT N7    &hml LCTRL N8   &hml LSHFT N9   &kp N0                ___             ___             ___             ___             ___             ___
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             ___             ___             ___             ___             ___                   ___             ___             ___             ___             ___             ___
        //╰───────────────┼───────────────┴───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                            ___             ___             ___                   ___             ___             ___
        //                                                ╰───────────────┴───────────────┴───────────────╯     ╰───────────────┴───────────────┴───────────────╯
      >;
    };

    sym_layer {
      label = "Sym";
      bindings = <
        //╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮     ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
            ___             &kp GRAVE       &kp DLLR        &kp EXCL        &kp LBRC        &kp RBRC              ___             ___             &kp RA(N3)      &kp RA(LS(N2))  &kp RA(A)       ___
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             &kp BSLH        &kp HASH        &kp AMPS        &kp LPAR        &kp RPAR              ___             &kp COLON       &kp EQUAL       &kp RA(O)       &kp RA(Q)       ___
        //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┤───────────────┼───────────────┤
            ___             &kp MINUS /*kinda missing*/       &kp UNDER /*kinda missing*/       &kp PIPE /*missing*/       &kp LBKT        &kp RBKT              ___             &kp TILDE       &kp AT          ___             ___             ___
        //╰───────────────┼───────────────┴───────────────┼───────────────┼───────────────┤───────────────┤     ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯
                                                            ___             ___             ___                   ___             ___             ___
        //                                                ╰───────────────┴───────────────┴───────────────╯     ╰───────────────┴───────────────┴───────────────╯
      >;
    };
  };
};
