// #define COMBO_TERM_FAST 18
// #define COMBO_TERM_SLOW 30
// #define COMBO_IDLE_FAST 150
// #define COMBO_IDLE_SLOW 50
#define COMBO_BRC_TIMEOUT 30
#define COMBO_BRC_IDLE 200

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TIMEOUT, IDLE) \
  combo_##NAME { \
    timeout-ms = <TIMEOUT>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
    require-prior-idle-ms = <IDLE>; \
  };

// #define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
//   combo_##NAME { \
//     bindings = <BINDINGS>; \
//     key-positions = <KEYPOS>; \
//     layers = <LAYERS>; \
//   };

/ {
  combos {
    compatible = "zmk,combos";

    // braces
    COMBO(lpar, &kp NO_LPAR, LT2 LT1, L_COLEMAK L_NUM L_SYM, COMBO_BRC_TIMEOUT, COMBO_BRC_IDLE)
    COMBO(rpar, &kp NO_RPAR, RT1 RT2, L_COLEMAK L_NUM L_SYM, COMBO_BRC_TIMEOUT, COMBO_BRC_IDLE)
    COMBO(lbrc, &kp NO_LBRC, LM2 LM1, L_COLEMAK L_NUM L_SYM, COMBO_BRC_TIMEOUT, COMBO_BRC_IDLE)
    COMBO(rbrc, &kp NO_RBRC, RM1 RM2, L_COLEMAK L_NUM L_SYM, COMBO_BRC_TIMEOUT, COMBO_BRC_IDLE)
    COMBO(lbrk, &kp NO_LBRK, LB2 LB1, L_COLEMAK L_NUM L_SYM, COMBO_BRC_TIMEOUT, COMBO_BRC_IDLE)
    COMBO(rbrk, &kp NO_RBRK, RB1 RB2, L_COLEMAK L_NUM L_SYM, COMBO_BRC_TIMEOUT, COMBO_BRC_IDLE)
    // COMBO(esc, &kp ESC, LM2 LM1, L_COLEMAK, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(bslh, &kp BSLH, LM1 LB0, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(lbkt, &kp LBKT, LM3 LM2, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(lbrc, &kp LBRC, LM2 LM1, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(equal, &kp EQUAL, LM1 LM0, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(lpar, &kp LPAR, LT2 LT1, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(amps, &kp AMPS, LB1 LB2, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)

    // right hand
    // COMBO(lpar, &morph_lpar_lt, RM2 RM1, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(rpar, &morph_rpar_gt, RM3 RM2, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(lbrk, &morph_lbkt_lbrc, RB2 RB1, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(rbrk, &morph_rbkt_rbrc, RB3 RB2, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(fslh, &kp FSLH, RM1 RB0, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(minus, &kp MINUS, RB1 RM2, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(caret, &kp CARET, RT1 RT2, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(dollar, &kp DOLLAR, RT2 RT3, L_COLEMAK L_NAV L_NUM, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(no_oe, &no_oe, RM4 RM3, L_COLEMAK, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(no_ae, &no_ae, RT4 RT3, L_COLEMAK, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    // COMBO(no_aa, &no_aa, RT5 RT4, L_COLEMAK, COMBO_TERM_SLOW, COMBO_IDLE_FAST)

    // both hands
    // COMBO(capsword, &caps_word, LM0 RM1, L_COLEMAK, COMBO_TERM_SLOW, COMBO_IDLE_FAST)
  };
};
